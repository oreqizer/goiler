type Account implements Node {
    # The ID of an object
    id: ID!
    authId: String!
    name: String!
    surname: String!
    email: String!
    isAdmin: Boolean!
    createdAt: Time!
    updatedAt: Time!
}

# A connection to a list of items.
type AccountConnection {
    # Information to aid in pagination.
    pageInfo: PageInfo!

    # A list of edges.
    edges: [AccountEdge]
}

# An edge in a connection.
type AccountEdge {
    # The item at the end of the edge
    node: Account

    # A cursor for use in pagination
    cursor: String!
}

input AddAccountInput {
    name: String!
    surname: String!
    email: String!
    clientMutationId: String
}

type AddAccountPayload {
    account: Account
    clientMutationId: String
}

input EditAccountInput {
    name: String!
    surname: String!
    clientMutationId: String
}

type EditAccountPayload {
    account: Account
    clientMutationId: String
}

input DeleteAccountInput {
    clientMutationId: String
}

type DeleteAccountPayload {
    deletedId: ID!
    clientMutationId: String
}
